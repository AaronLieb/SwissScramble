Description: ECS Service to deploy the Swiss Scramble webapp

Parameters:
  LatestECSOptimizedAMI:
    Description: ID of the latest ECS-optimized Amazon Linux 2023 AMI
    Type: AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>
    Default: /aws/service/ecs/optimized-ami/amazon-linux-2023/recommended/image_id

  SecurityGroupIDs:
    Type: CommaDelimitedList
    Default: sg-0659b5901dc07ec8a

  SubnetIDs:
    Type: CommaDelimitedList
    Default: subnet-0fc77df0746ca7842,subnet-03d8c390375b22f17,subnet-0ba47ebc874315530,subnet-08c4f72c17d66db2f

  VPCID:
    Type: String
    Default: vpc-09a91b65200dbbc8e

Resources:
  FrontendRepository:
    DeletionPolicy: RetainExceptOnCreate
    Type: AWS::ECR::Repository
    Properties:
      RepositoryName: swiss-frontend

  BackendRepository:
    DeletionPolicy: RetainExceptOnCreate
    Type: AWS::ECR::Repository
    DependsOn: FrontendRepository
    Properties:
      RepositoryName: swiss-backend

  ECSCluster:
    Type: AWS::ECS::Cluster
    Properties:
      ClusterName: swiss-scramble

  TaskExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: ecs-tasks.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AmazonECSTaskExecutionRolePolicy

  ECSTaskDefinition:
    Type: AWS::ECS::TaskDefinition
    Properties:
      Family: frontend-backend-task
      NetworkMode: host
      RequiresCompatibilities:
        - EC2
      Cpu: "256"
      Memory: "512"
      ExecutionRoleArn: !GetAtt TaskExecutionRole.Arn
      ContainerDefinitions:
        - Name: frontend
          Image: !Sub ${AWS::AccountId}.dkr.ecr.${AWS::Region}.amazonaws.com/swiss-frontend:latest
          Essential: true
          PortMappings:
            - ContainerPort: 80
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group: !Ref CloudWatchLogGroup
              awslogs-region: !Ref AWS::Region
              awslogs-stream-prefix: frontend
        - Name: backend
          Image: !Sub ${AWS::AccountId}.dkr.ecr.${AWS::Region}.amazonaws.com/swiss-backend:latest
          Essential: true
          PortMappings:
            - ContainerPort: 8000
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group: !Ref CloudWatchLogGroup
              awslogs-region: !Ref AWS::Region
              awslogs-stream-prefix: backend

  CloudWatchLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: /ecs/swiss-scramble
      RetentionInDays: 30

  ECSInstanceRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: ECSInstanceRole
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: ec2.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AmazonEC2ContainerServiceforEC2Role
        - arn:aws:iam::aws:policy/service-role/AmazonEC2RoleforSSM
      Path: /

  ECSInstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      InstanceProfileName: ECSInstanceProfile
      Path: /
      Roles:
        - !Ref ECSInstanceRole

  ECSLaunchTemplate:
    Type: AWS::EC2::LaunchTemplate
    Properties:
      LaunchTemplateName: ECSLaunchTemplate
      LaunchTemplateData:
        InstanceType: t3.micro
        ImageId: !Ref LatestECSOptimizedAMI
        KeyName: icf-access
        IamInstanceProfile:
          Arn: !GetAtt ECSInstanceProfile.Arn
        SecurityGroupIds: !Ref SecurityGroupIDs
        UserData: !Base64
          Fn::Sub: |
            #!/bin/bash
            echo ECS_CLUSTER=${ECSCluster} >> /etc/ecs/ecs.config
            yum install -y aws-cfn-bootstrap
            /opt/aws/bin/cfn-signal -e $? --stack ${AWS::StackName} --resource ECSAutoScalingGroup --region ${AWS::Region}

  ECSAutoScalingGroup:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      VPCZoneIdentifier: !Ref SubnetIDs
      LaunchTemplate:
        LaunchTemplateName: ECSLaunchTemplate
        Version: !GetAtt ECSLaunchTemplate.LatestVersionNumber
      MinSize: "1"
      MaxSize: "3"
      DesiredCapacity: "1"
